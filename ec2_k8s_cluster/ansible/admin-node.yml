---
- name: Prep Admin Node
  remote_user: root

  tasks:
    - name: Update packages
      apt:
        update_cache: true
        upgrade: full
        autoremove: true
    
    - name: Install packages
      apt:
        name: curl,vim,apt-transport-https,ca-certificates,gpg
        autoremove: true
    
    # https://kubernetes.io/docs/tasks/tools/
    - name: Download kubectl binary
      ansible.builtin.shell: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
    
    - name: Install kubectl
      ansible.builtin.shell: sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    
    - name: Validate kubectl install
      ansible.builtin.shell: kubectl version --client
    
    - name: Allow all access to tcp port 6443
      community.general.ufw:
        rule: allow
        port: '6443'
        proto: tcp
    
    # Following these docs: https://github.com/containerd/containerd/blob/main/docs/getting-started.md
    - name: Download containerd archive
      ansible.builtin.shell: curl -O https://github.com/containerd/containerd/archive/refs/tags/api/v1.7.19.tar.gz
    
    - name: Extract the archive to the expected directory
      ansible.builtin.shell: tar Cxzvf /usr/local v1.7.19.tar.gz
    
    - name: Download the containerd.service file
      ansible.builtin.shell: curl -o /usr/local/lib/systemd/system/containerd.service https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
      
    - name: Start the containerd service with systemd
      ansible.builtin.systemd_service:
        name: containerd
        daemon_reload: true
        state: started
        enabled: true
    
    - name: Download the runc binary
      ansible.builtin.shell: curl -O https://github.com/opencontainers/runc/releases/download/v1.1.13/runc.amd64
    
    - name: Install runc
      ansible.builtin.shell: install -m 755 runc.amd64 /usr/local/sbin/runc
    
    - name: Download the CNI plugin archive
      ansible.builtin.shell: curl -O https://github.com/containernetworking/plugins/releases/download/v1.5.1/cni-plugins-linux-amd64-v1.5.1.tgz
    
    - name: Extract the archive to the expected directory
      ansible.builtin.shell: mkdir -p /opt/cni/bin && tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.5.1.tgz
      
    - name: Install k8s keyring
      ansible.builtin.shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    
    - name: Add the k8s repo
      ansible.builtin.shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
    
    - name: Install k8s packages
      apt:
        name: kubelet kubeadm kubectl
        update_cache: true
        upgrade: full
        autoremove: true
    
    - name: Mark hold on k8s packages
      ansible.builtin.shell: apt-mark hold kubelet kubeadm kubectl
    
    - name: Start kubelet into its crash-loop, ready for kubeadm
      ansible.builtin.systemd_service:
        name: kubelet
        enabled: true
        state: started
    
    # I left off here: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#configuring-a-cgroup-driver

